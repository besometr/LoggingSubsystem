////////////////////////////////////////////////////////////////////////////////
// Подсистема "Логирование"
//
// 
// 
////////////////////////////////////////////////////////////////////////////////



#Область ОбработчикиСобытийФормы


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Получение значений основного отбора	
	СтруктураСлужебныхПолейЛога = ЛогированиеПовторногоИспользования.СтруктураСлужебныхПолейЛога();
	Отбор_host	= СтруктураСлужебныхПолейЛога.host;
	Отбор_app	= СтруктураСлужебныхПолейЛога._app;
	Отбор_node	= СтруктураСлужебныхПолейЛога._node;
	Отбор_branch= СтруктураСлужебныхПолейЛога._branch;
	
	//Уровни лога
	СтруктураУровнейЛога = ЛогированиеПовторногоИспользования.СтруктураУровнейЛога();
	Элементы.Отбор_level.СписокВыбора.Добавить(0, "Все");
	Для Каждого КлючИЗначение Из СтруктураУровнейЛога Цикл 
		Элементы.Отбор_level.СписокВыбора.Добавить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	КонецЦикла;
	Отбор_level = 0;
	
	Отбор_КоличествоЗаписей = 10;
	
КонецПроцедуры


#КонецОбласти



#Область ОбработчикиСобытийЭлементовШапкиФормы
//Код процедур и функций
#КонецОбласти



#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы



#КонецОбласти



#Область ОбработчикиКомандФормы


&НаСервере
Процедура ОбновитьЛогиНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЛоги(Команда)
	ОбновитьЛогиНаСервере();
КонецПроцедуры



#КонецОбласти



#Область СлужебныеПроцедурыИФункции




#КонецОбласти