////////////////////////////////////////////////////////////////////////////////
// Подсистема "Логирование"
//
// 
// 
////////////////////////////////////////////////////////////////////////////////



#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриОткрытииНаСервере()
	
	НастройкаКомпоновки = Неопределено;	
	
	//
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	 
	// Получаем схему компоновки
	СхемаКомпоновки = Обработки.Тест_ПолучениеЛоговКомпоновщикНастроек.ПолучитьМакет("Макет");
	
	// Для инициализации схемы нам нужен адрес в хранилище  
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновки, УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	Если НастройкаКомпоновки = Неопределено Тогда
        КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновки.ВариантыНастроек.Основной.Настройки);
    Иначе
        КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКомпоновки);
        КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	КонецЕсли;
	
	
	КомпановщикНастроекНаФорме = КомпоновщикНастроек;
	
	// Устанавливаем значение Отборов
	//КомпоновщикНастроек.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("timestamp", КонецДня(ТекущаяДата()));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПриОткрытииНаСервере();
КонецПроцедуры



#КонецОбласти



#Область ОбработчикиСобытийЭлементовШапкиФормы
//Код процедур и функций
#КонецОбласти



#Область ОбработчикиСобытийЭлементовТаблицыФормы_дзСвойстваИндексов


#КонецОбласти



#Область ОбработчикиКомандФормы



#КонецОбласти



#Область СлужебныеПроцедурыИФункции




#КонецОбласти







